#!/usr/bin/python2.5
import sys
import parse_infoEnt

def error_checker(sys_arg,mode):
	diagnostic=True
    	pickling=True
    	file_exist=False
    	plot=True
    	plotTimeSeries=True
    	simulate=False
    	design=False
    	full=False
    	usesbml=True
    	seed = None
    	timing = False
    	fname = "_results_"
    	custom_kernel = False
    	custom_distance = False
    	use_cuda = False
    	use_c = False
    	full_debug = False

    	for i in range(1,len(sys_arg)):

        	if sys_arg[i].startswith('--'):
            		option = sys_arg[i][2:]
          
            		if option == 'help':
                		printOptions()
                		sys.exit()
            		elif option == 'diagnostic': diagnostic=False
            		elif option == 'save': pickling=False
            		elif option == 'timeseries': plotTimeSeries=False
            		elif option == 'plotdata': plot=False
            		elif option == 'simulate': simulate=True
            		elif option == 'design': design=True
            		elif option == 'debug': full_debug=True
            		elif option == 'fulloutput': full=True
	    		elif option == 'localcode' : usesbml = False 
            		elif option[0:8] == 'setseed=' : seed = int( option[8:] )
            		elif option[0:10] == 'outfolder=' : fname = option[10:]
            		elif option[0:9] == 'cudacode=' : app_file = option[9:]
	    		elif option == 'timing' : timing = True 
	    		elif option == 'custk' : custom_kernel = True
	    		elif option == 'custd' : custom_distance = True
            		elif option == 'cuda' : use_cuda = True
            		elif option == 'c++' : use_c = True
	    		elif option == 'infile': 
                		input_file=sys_arg[i+1]
                		file_exist=True
	    		elif not(sys_arg[i-1][2:] == 'infile'): 
                		print "\nunknown option "+sys_arg[i]
                		printOptions()
                		sys.exit()
            
		elif sys_arg[i].startswith('-'):
            		option = sys_arg[i][1:]
            		if option == 'h':
                		printOptions()
                		sys.exit()
            		elif option == 'd': diagnostic=False
            		elif option == 's': pickling=False
            		elif option == 't': plotTimeSeries=False
            		elif option == 'p': plot=False
            		elif option == 'S': simulate=True
            		elif option == 'D': design=True
            		elif option == 'db': full_debug=True
            		elif option == 'f': full=True
            		elif option == 'cu': use_cuda = True
	    		elif option == 'lc' : usesbml = False
            		elif option[0:3] == 'sd=' : seed = int( option[3:] )
            		elif option[0:3] == 'of=' : fname = option[3:]
            		elif option == 'tm' : timing = True
            		elif option == 'i': 
             			input_file=sys_arg[i+1]
                		file_exist=True
            		elif not(sys_arg[i-1][2:] == 'i'): 
                		print "\nunknown option "+sys_arg[i]
                		printOptions()
                		sys.exit()
        	elif not((sys_arg[i-1][2:] == 'infile') or (sys_arg[i-1][1:] == 'i')):
            		print "\nunknown expression \""+sys_arg[i]+"\""
            		printOptions()
            		sys.exit()

	if file_exist == False:
        	print "\nNo input_file is given!\nUse: \n\t-i 'inputfile' \nor: \n\t--infile 'inputfile' \n"
        	sys.exit()

	info_new = parse_infoEnt.algorithm_info(input_file, mode)
	info_new.print_info()






















